<!DOCTYPE html><html lang="en">
<head>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <meta charset="UTF-8">
  <title>Cleaner Royall Payments Portal</title>
  <style>
    body {
      margin: 0;
      font-family: 'Segoe UI', sans-serif;
      background-color: #f0fdfc;
      color: #073b3a;
    }
    .container {
      padding: 20px;
      max-width: 480px;
      margin: auto;
    }
    .header {
      text-align: center;
      margin-bottom: 30px;
    }
    .header h1 {
      color: #065f46;
    }
    .price-tag {
      background: #ccfbf1;
      border-left: 5px solid #0f766e;
      padding: 10px;
      border-radius: 8px;
      margin-bottom: 20px;
      color: #047857;
    }
    .section {
      margin-bottom: 20px;
    }
    #methods label {
      display: flex;
      align-items: center;
      margin-bottom: 12px;
      font-size: 16px;
      cursor: pointer;
      gap: 8px;
    }
    #methods input[type="radio"] {
      accent-color: #0d9488;
      transform: scale(1.1);
    }
    button, .copy-button {
      background-color: #0d9488;
      color: white;
      padding: 10px;
      border: none;
      border-radius: 8px;
      font-weight: bold;
      margin-top: 10px;
      width: 100%;
      box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);
      cursor: pointer;
    }
    .qr-img {
      margin-top: 15px;
      max-width: 100%;
      border-radius: 10px;
      box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    }
    #loading {
      text-align: center;
      margin: 40px 0;
      color: #0f766e;
    }
  </style>
</head>
<body>
  <div class="container">
    <div class="header">
      <h1>Cleaner Royall <b>Payments Portal</b></h1>
    </div>
    <div id="loading">Loading payment info...</div>
    <div id="content" style="display:none">
      <div class="price-tag">Payment Price: <span id="price">4$</span></div>
      <div class="section">
        <label for="methods">Select your Payment Method</label>
        <div id="methods"></div>
      </div>
      <div id="details"></div>
    </div>
  </div>

  <script>
    const dataUrl = "https://raw.githubusercontent.com/araafroyall/Cleaner-Royall/main/server/premium/Payment.json";
    const methods = ["Paypal", "Binance", "Crypto Currency", "Telegram stars", "Others"];

    const ids = {
      Paypal: [
        { label: "Pay at PayPal Web", action: "link", key: "ppweb" },
        { label: "Copy PayPal Username", key: "ppuser" },
        { label: "Copy PayPal Gmail", key: "ppgmail" }
      ],
      Binance: [
        { label: "Copy Binance UID", key: "buid" },
        { label: "Copy Binance Gmail", key: "bgmail" },
        { label: "Binance QR", image: "https://raw.githubusercontent.com/araafroyall/Cleaner-Royall/main/server/web/images/payments/BinanceQR.jpg" }
      ],
      "Crypto Currency": [
        { label: "Copy BTC Address", key: "btc" },
        { label: "Copy BEP-20 (USDT) Address", key: "c20" },
        { label: "Copy TRX Address", key: "trx" }
      ]
    };

    fetch(dataUrl)
      .then(res => {
        if (!res.ok) throw new Error('Network response was not ok: ' + res.status);
        return res.json();
      })
      .then(data => {
        console.log("Payment data loaded:", data);
        document.getElementById("loading").style.display = "none";
        document.getElementById("content").style.display = "block";
        document.getElementById("price").textContent = data.price;

        const methodsContainer = document.getElementById("methods");
        methods.forEach(method => {
          const radio = document.createElement("input");
          radio.type = "radio";
          radio.name = "paymethod";
          radio.id = method;
          radio.value = method;

          // Disable if suspended
          if ((method === "Paypal" && data.paypal !== "1") ||
              (method === "Binance" && data.binance !== "1")) {
            radio.disabled = true;
            radio.addEventListener("click", () => alert(method + " is currently suspended."));
          }

          const label = document.createElement("label");
          label.htmlFor = method;

          const text = document.createElement("span");
          text.textContent = method;

          label.appendChild(radio);
          label.appendChild(text);
          methodsContainer.appendChild(label);

          radio.addEventListener("change", () => showDetails(method, data));
        });
      })
      .catch(err => {
        console.error("Error loading payment data:", err);
        document.getElementById("loading").textContent = "Failed to load payment info.";
        alert("Failed to load payment info: " + err.message);
      });

    function showDetails(method, data) {
      const container = document.getElementById("details");
      container.innerHTML = "";
      const list = ids[method];
      if (!list) return;

      list.forEach(item => {
        if (item.image) {
          const img = document.createElement("img");
          img.src = item.image;
          img.className = "qr-img";
          container.appendChild(img);
          return;
        }

        const btn = document.createElement("button");
        btn.textContent = item.label;

        if (item.action === "link") {
          btn.onclick = () => window.open(data[item.key], '_blank');
        } else {
          btn.onclick = () => {
            navigator.clipboard.writeText(data[item.key])
              .then(() => alert("Copied to clipboard"))
              .catch(() => alert("Failed to copy"));
          };
        }
        container.appendChild(btn);
      });
    }
  </script>
</body>
</html>